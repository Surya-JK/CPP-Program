#include <iostream>
#include <cmath>
using namespace std;
class Shape {
public:
    virtual double area() const = 0;
    virtual double volume() aconst = 0;
};

class Sphere : public Shape {
private:
    double radius;
public:
    Sphere(double r) : radius(r) {}

    double area() const override {
        return 4 * M_PI * radius * radius;
    }

    double volume() const override {
        return 4.0/3.0 * M_PI * radius * radius * radius;
    }
};

class Cylinder : public Shape {
private:
    double radius;
    double height;
public:
    Cylinder(double r, double h) : radius(r), height(h) {}

    double area() const override {
        return 2 * M_PI * radius * (radius + height);
    }

    double volume() const override {
        return M_PI * radius * radius * height;
    }
};

int main() {
    Sphere s(5);
    Cylinder c(2, 10);

    cout << "Sphere area: " << s.area() << ", volume: " << s.volume() << endl;
    cout << "Cylinder area: " << c.area() << ", volume: " << c.volume() << endl;

    return 0;
}
